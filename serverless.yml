service: g3-users-service

frameworkVersion: "3"

plugins:
  - serverless-dotenv-plugin
  - serverless-esbuild
  - serverless-offline    # opcional para desarrollo local


useDotenv: true

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1
  environment:
    NODE_ENV: ${env:NODE_ENV}
    USERS_TABLE: ${env:USERS_TABLE}
    JWT_SECRET: ${env:JWT_SECRET}
    REST_API_ID: ${env:REST_API_ID}
    REST_API_ROOT_RESOURCE_ID: ${env:REST_API_ROOT_RESOURCE_ID}
    CDN: ${env:CDN}
    SWAGGER_BUCKET: ${env:SWAGGER_BUCKET}
    CLOUDFRONT_DISTRIBUTION_ID: ${env:CLOUDFRONT_DISTRIBUTION_ID}


  apiGateway:
    restApiId: ${env:REST_API_ID}
    restApiRootResourceId: ${env:REST_API_ROOT_RESOURCE_ID}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:GetItem
        - dynamodb:Query
        - dynamodb:UpdateItem
      Resource:
        - arn:aws:dynamodb:${self:provider.region}:*:table/${env:USERS_TABLE}
        - arn:aws:dynamodb:${self:provider.region}:*:table/${env:USERS_TABLE}/index/EmailIndex

    - Effect: Allow
      Action:
        - logs:CreateLogGroup
        - logs:CreateLogStream
        - logs:PutLogEvents
      Resource: "arn:aws:logs:${self:provider.region}:*:log-group:/aws/lambda/*"

functions:
  api:
    name: g3_user_api_function
    handler: src/handlers/handler.handler
    events:
      - http:
          path: users/health
          method: get
          cors:
            origin: '*'
            headers:
              - 'Content-Type'
              - 'Accept'
              - 'Authorization'
            allowCredentials: false

      - http:
          path: users
          method: post
          cors: true

      - http:
          path: users/login
          method: post
          cors: true

      - http:
          path: users/profile
          method: get
          cors: true

      - http:
          path: users/profile
          method: patch
          cors: true

      - http:
          path: docs/users
          method: get
          cors: true

      - http:
          path: docs/kpis
          method: get
          cors: true


      - http:
          path: docs/orders
          method: get
          cors: true

custom:
  esbuild:
    bundle: true
    minify: false
    sourcemap: true
    exclude:
      - aws-sdk
    target: "node22"
    platform: "node"
    concurrency: 10

  serverless-offline:
    prefix: api
    noPrependStageInUrl: true