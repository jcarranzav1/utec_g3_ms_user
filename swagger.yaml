openapi: 3.0.0
info:
  title: Users Service
  description: API para gestionar usuarios
  version: 1.0.0
servers:
  - url: /api
    description: Stage local

  - url: /dev/api
    description: Stage DEV

paths:
  /users:
    post:
      summary: Crear usuario
      tags: [Users]
      description: Endpoint para registrar un nuevo usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUpDto'
      responses:
        '201':
          description: Usuario creado
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/JwtResponse'
                    required: [message, data]
        
  /users/health:
    get:
      summary: Verificar estado del servicio
      tags: [Health]
      description: Endpoint para verificar si el servicio está activo
      responses:
        '200':
          description: Servicio activo
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/HealthResponse'
                    required: [message, data]

  /users/login:
    post:
      summary: Autenticación de usuario
      tags: [Users]
      description: Endpoint para iniciar sesión y obtener un token JWT
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginDto'
      responses:
        '200':
          description: Login exitoso
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/JwtResponse'
                    required: [message, data]
        
  /users/profile:
    get:
      summary: Obtener perfil de usuario
      tags: [Users]
      description: Endpoint para obtener el perfil del usuario autenticado
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Perfil del usuario
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/UserEntity'
                    required: [message, data]

    patch:
      summary: Actualizar perfil de usuario
      tags: [Users]
      description: Endpoint para actualizar el perfil del usuario autenticado
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserDto'
      responses:
        '200':
          description: Perfil actualizado
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        nullable: true
                    required: [message, data]

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    ApiResponse:
      type: object
      properties:
        message:
          type: string
          description: Mensaje de respuesta
          example: Operación exitosa
        data:
          type: object
          description: Datos de respuesta
      required:
        - message

    UserEntity:
      type: object
      description: Representa un usuario registrado en el sistema
      properties:
        user_id:
          type: string
          format: uuid
          description: Identificador único del usuario
          example: 123e4567-e89b-12d3-a456-426614174000
        name:
          type: string
          nullable: true
          description: Nombre completo del usuario
          example: Juan Diego Carranza
        email:
          type: string
          format: email
          description: Correo electrónico del usuario
          example: juan.carranza@example.com
        password:
          type: string
          description: Contraseña (hash) del usuario
          example: $2b$10$EixZaYVK1fsbw1ZfbX3OXePaWxn96p36U8Qigu/1Gff9pX
        phone:
          type: string
          description: Número de teléfono del usuario
          example: +51987654321
        address:
          type: string
          description: Dirección física del usuario
          example: Av. Los Cambios 123, Lima, Perú
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
          description: Estado de la cuenta del usuario
          example: ACTIVE
        type:
          type: string
          enum:
            - CUSTOMER
            - ADMIN
          description: Rol o tipo de usuario
          example: CUSTOMER
        created_at:
          type: string
          format: date-time
          description: Fecha de creación del registro
          example: 2025-06-30T10:15:00Z
        updated_at:
          type: string
          format: date-time
          description: Fecha de la última actualización
          example: 2025-06-30T12:00:00Z
      required:
        - user_id
        - email
        - phone
        - address
        - status
        - type
        - created_at
        - updated_at

    JwtResponse:
      type: object
      description: Payload de respuesta de autenticación
      properties:
        token:
          type: string
          description: Token JWT de acceso
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
      required:
        - token

    HealthResponse:
      type: object
      description: Payload de respuesta de salud del servicio
      properties:
        status:
          type: string
          description: Estado del servicio
          example: "Ok"
        timestamp:
          type: string
          format: date-time
          description: Marca de tiempo de la verificación
          example: "2025-06-30T10:15:00Z"
      required:
        - status
        - timestamp

    SignUpDto:
      type: object
      properties:
        name:
          type: string
          description: Nombre completo del usuario
          example: Juan Diego Carranza
        email:
          type: string
          format: email
          description: Correo electrónico
          example: juan.carranza@example.com
        password:
          type: string
          minLength: 6
          description: Contraseña de al menos 6 caracteres
          example: secr3tP4ss
        phone:
          type: string
          description: Número de teléfono opcional
          example: +51987654321
        address:
          type: string
          description: Dirección opcional
          example: Lima, Perú
      required:
        - name
        - email
        - password

    LoginDto:
      type: object
      properties:
        email:
          type: string
          format: email
          description: Correo electrónico
          example: juan.carranza@example.com
        password:
          type: string
          minLength: 6
          description: Contraseña
          example: secr3tP4ss
      required:
        - email
        - password

    UpdateUserDto:
      type: object
      properties:
        name:
          type: string
          description: Nombre completo opcional
          example: Juan Pérez
        phone:
          type: string
          description: Número de teléfono opcional
          example: +51991234567
        address:
          type: string
          description: Dirección opcional
          example: Av. Siempre Viva 742
